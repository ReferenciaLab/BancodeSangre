unit DialogConsultaDonaciones;

interface

uses
  Windows, Messages, SysUtils, Variants, Classes, Graphics, Controls, Forms,
  Dialogs, DialogConsulta, cxGraphics, Menus, cxLookAndFeelPainters, cxStyles,
  cxCustomData, cxFilter, cxData, cxDataStorage, cxEdit, DB, cxDBData,
  cxGridCustomTableView, cxGridTableView, cxGridDBTableView, ADODB,
  dxLayoutControl, cxGridLevel, cxClasses, cxControls, cxGridCustomView, cxGrid,
  StdCtrls, cxButtons, cxTextEdit, cxContainer, cxMaskEdit, cxDropDownEdit,
  DialogCobro;

type
  TfrmDialogConsultaDonaciones = class(TfrmDialogConsulta)
    dbDatosTotalPagado: TcxGridDBColumn;
    dbDatosTotalPendiente: TcxGridDBColumn;
    dbDatosEntredaID: TcxGridDBColumn;
    dbDatosFecha: TcxGridDBColumn;
    dbDatosPacienteID: TcxGridDBColumn;
    dbDatosClienteID: TcxGridDBColumn;
    dbDatosNeto: TcxGridDBColumn;
    dbDatosNombrePaciente: TcxGridDBColumn;
    dbDatosClienteNombre: TcxGridDBColumn;
    dbDatosColumn1: TcxGridDBColumn;
    dbDatosColumn2: TcxGridDBColumn;
    dbDatosHold: TcxGridDBColumn;
    procedure cgDatosExit(Sender: TObject);
    procedure cgDatosEnter(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure FormShow(Sender: TObject);
    procedure edbuscarPropertiesChange(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure BuscarData;
  private
    { Private declarations }
  public
    { Public declarations }
    procedure Run;
  end;

var
  frmDialogConsultaDonaciones: TfrmDialogConsultaDonaciones;
  adentrogrid : Boolean;

implementation

uses DataModule,dataBanco, Main;

{$R *.dfm}

procedure TfrmDialogConsultaDonaciones.Run;
Var
 qfind : TADOQuery;
begin
 showmodal;
 if ModalResult = mrOk then
 begin

  DMB.RetornarDonacion := DMB.qrEntradaPacienteConsRecid.Value;
  //frmMain.frmTmp.BuscarDatos;
  //frmMain.frmTmp.RefrescarInterface;
 end;
end;

procedure TfrmDialogConsultaDonaciones.BuscarData;
var
 sqlString : String;
begin
 sqlString := 'Select * from dbo.PTENTRADAPACIENTE INNER JOIN dbo.BSDonacion ON dbo.PTENTRADAPACIENTE.ENTRADAID = dbo.BSDonacion.DonacionID ';
 if edbuscar.Text <> '' then begin
   case edbuscarpor.ItemIndex of
     0 : sqlString := sqlString + ' where EntradaID like '+#39+'%'+ trim(edbuscar.Text)+'%'+#39;
     1 : sqlString := sqlString + ' where PacienteID like '+#39+'%'+trim(edbuscar.Text)+'%'+#39;
     2 : sqlString := sqlString + ' where NombrePaciente like '+#39+'%'+'%'+trim(edbuscar.Text)+'%'+#39;
     3 : sqlString := sqlString + ' where ClienteID like '+#39+'%'+trim(edbuscar.Text)+'%'+#39;
     4 : sqlString := sqlString + ' where ClienteNombre like '+#39+'%'+trim(edbuscar.Text)+'%'+#39;
     5 : sqlString := sqlString + ' where Telefonos like '+#39+'%'+trim(edbuscar.Text)+'%'+#39;
   end;
 end;

 DMB.qrEntradaPacienteCons.Close;
 DMB.qrEntradaPacienteCons.SQL.Text := sqlString + ' Order by PTENTRADAPACIENTE.fecha desc,horaentrada desc,entradaId';
 DMB.qrEntradaPacienteCons.Open;

end;

procedure TfrmDialogConsultaDonaciones.cgDatosEnter(Sender: TObject);
begin
  inherited;
  adentrogrid := true;
end;

procedure TfrmDialogConsultaDonaciones.cgDatosExit(Sender: TObject);
begin
  inherited;
  adentrogrid := false;
end;

procedure TfrmDialogConsultaDonaciones.edbuscarPropertiesChange(Sender: TObject);
begin
  inherited;
  BuscarData;
end;

procedure TfrmDialogConsultaDonaciones.FormCreate(Sender: TObject);
begin
  inherited;
  DMB.qrEntradaPacienteCons.Close;
  DMB.qrEntradaPacienteCons.SQL.Text :=  'Select * from dbo.PTENTRADAPACIENTE INNER JOIN dbo.BSDonacion ON dbo.PTENTRADAPACIENTE.ENTRADAID = dbo.BSDonacion.DonacionID ';
  DMB.qrEntradaPacienteCons.Open;

  edbuscarpor.ItemIndex := 2;
end;

procedure TfrmDialogConsultaDonaciones.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  inherited;
  if (key = Vk_Down) and (not AdentroGrid) then
     PostMessage(Handle, Wm_NextDlgCtl, 0, 0);
  if (key = 13) and (not AdentroGrid) then
     PostMessage(Handle, Wm_NextDlgCtl, 0, 0);
  if (key = 13) and (AdentroGrid) then
  begin
   Close;
   ModalResult := mrOk;
  end;
  if (key = Vk_Up) and (not AdentroGrid) then
     PostMessage(Handle, Wm_NextDlgCtl, 1, 0);
  if (key = 27) then
  begin
   Close;
  end;

end;

procedure TfrmDialogConsultaDonaciones.FormShow(Sender: TObject);
begin
  inherited;
  edbuscar.SetFocus;
end;


end.
